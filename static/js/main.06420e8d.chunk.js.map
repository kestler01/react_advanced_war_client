{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/game/CreateGame.js","api/games.js","components/game/IndexGames.js","components/game/GameHall.js","components/game/GameBoard.js","components/game/GameInstance.js","api/pieces.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","CreateGame","onCreateGame","gameDataName","game","createGame","console","log","IndexGames","setGamesIndex","games","indexGames","gameList","filter","is_started","map","ListGroup","Item","action","role","Container","Row","Col","GameBoard","createBoard","size","cellArray","y","x","drawCells","gamePieces","board","rowArray","row","cell","uuid","turn","length","GameInstance","initialSet","bigGameObj","setPieces","setGame","setTurn","newGame","newGamePieces","game_pieces","piece","piecesArray","pieceData","gameId","position_x","position_y","createPiece","pieceId","updatePiece","indexPieces","getGame","match","params","clearGame","clearPieces","gameData","updatedGameData","demoPiece","onClick","DeleteGame","EndTurn","CreatNewPiece","App","pieces","msgAlerts","msg","path","setGameId","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.06420e8d.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n    <NavLink to='/games' className='nav-link'>Games</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Advance War </Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://advanced-war.herokuapp.com',\n  development: 'http://localhost:8000'\n}\n// my django api is at port 8000, default is 4741\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// user routes\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Token ${user.token}` // default is bearer, but that is for the express server: i am using django and it expects the authorization header to be Token 'user.token'\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-pw/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Token ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Successfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const createGameSuccess = 'Game created successfully: navigating to game lobby'\nexport const createGameFailure = 'Failed to create game, please make sure you are signed in and that a name is provided for your game instance'\nexport const getNoGamesFailure = 'There are no games yet, make a game !'\nexport const DeleteGameSuccess = 'Game Deleted, navigating to game hall'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { createGame } from './../../api/games'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { createGameSuccess, createGameFailure } from '../AutoDismissAlert/messages'\n\n// App < GameHall <indexgames & creategame < gamelobby < ingameview\n// @^ index and create are siblings, not parent child.\n\n// create Game\nclass CreateGame extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      name: ''\n    }\n  }\n\n  // will need to export game:{ name: 'value'} => see gameData\n  // for our form updates, not locking out\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  onCreateGame = (event) => {\n    event.preventDefault()\n\n    const { msgAlert, history, user } = this.props // from app level\n    // createGame expects 'user, gameData' where gameData: is an object with a name\n    // attribute to be accessed as => gameData.name\n    const gameDataName = this.state\n    // let createdGame\n\n    createGame(user, gameDataName)\n      .then((res) => {\n        console.log(res)\n        return (res)\n      })\n      .then((res) => {\n        msgAlert({\n          heading: 'Create Game Success',\n          message: createGameSuccess,\n          variant: 'success'\n        })\n        return (res)\n      }\n      )\n      .then((res) => history.push(`/games/${res.data.game.id}/ `)) // will go to the new games view\n    // automatically.\n      .catch((error) => {\n        this.setState({ email: '', password: '' })\n        msgAlert({\n          heading: 'Create Game Failed with error: ' + error.message,\n          message: createGameFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  // add a render method with the form!\n  render () {\n    const { name } = this.state\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3>Create a new Game</h3>\n          <Form onSubmit={this.onCreateGame}>\n            <Form.Group controlId='name'>\n              <Form.Label>New Game Name</Form.Label>\n              <Form.Control\n                required\n                type='string'\n                name='name'\n                value={name}\n                placeholder=' new game '\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            {/* <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                name='password'\n                value={password}\n                type='password'\n                placeholder='Password'\n                onChange={this.handleChange}\n              />\n            </Form.Group> */}\n            <Button variant='primary' type='submit'>\n              Create\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n  // then implement the game lobby view with state goodness.\n}\n\nexport default withRouter(CreateGame)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// game routes\n// create a game (expects name, rest is defaulted)\nexport const createGame = (user, gameDataName) => { // user is coming from the state of the app component\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/games/',\n    headers: {\n      Authorization: `Token ${user.token}`\n    },\n    data: {\n      game: {\n        name: gameDataName.name\n      }\n    }\n  })\n}\n\n// get all users games ( will need another to get ALL open games(not started?), V2+)\nexport const indexGames = (user) => {\n  return axios({\n    url: apiUrl + '/games/',\n    method: 'GET',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n// get one game / detail view\nexport const getGame = (user, id) => {\n  return axios({\n    url: apiUrl + `/games/${id}/`,\n    method: 'GET',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n// patch the game, it IS a PARTIAL update, can accept a new name(str), is_over(bool), is_started(bool), and turn(int).\n// WILL NOT AFFECT PIECES\nexport const updateGame = (user, id, gameData) => {\n  return axios({\n    url: apiUrl + `/games/${id}/`,\n    method: 'PATCH',\n    headers: {\n      Authorization: `Token ${user.token}`\n    },\n    data: { gameData }\n  })\n}\n\n// delete game\nexport const deleteGame = (user, id) => {\n  return axios({\n    url: apiUrl + `/games/${id}/`,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { indexGames } from '../../api/games'\n\n// import { v4 as uuid } from 'uuid'\n// index Games\n\n// App < GameHall <indexgames & creategame\n// @^ index and create are siblings, not parent child.\nclass IndexGames extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      games: []\n    }\n  }\n  // I expect state to look like this:\n  // games:[{\n  //    id: 14,\n  //    name: 'DK',\n  //    is_over: false,\n  //    is_started: false,\n  //    owner: 4,\n  //    turn: 0,\n  //    created_at:...,\n  //    updated_at:...,\n  //  },\n  //  {\n  //    'another games data'\n  //  }, ...\n  //  ]\n\n  setGamesIndex = (games) => this.setState(games)\n\n  componentDidMount () {\n    const { user } = this.props\n    // indexGames expects a user, returns an object 'games': with an array of game objects\n    indexGames(user)\n      .then((res) => {\n        console.log('INDEX games call:', res)\n        return res\n      })\n      .then((res) => this.setGamesIndex(res.data))\n      .catch((res) => console.log(res))\n  }\n\n  // will add player # logic here in later versions, also refresh button to redo the call ?\n\n  render () {\n    const openGames = this.state.games.filter((game) => game.is_started === false)\n\n    const drawGameListEntry = (game) => (\n      <ListGroup.Item\n        key={game.id}\n        // disabled // grayed out and no hover- will be implemented later\n        action // enables hover goodness\n        variant='dark' // makes it dark\n        // link={ `/games/${game.id}/`} // href go to other sites, must use Links\n      >\n        <Link className='btn' role='button' to={`/games/${game.id}/`}>\n          {game.name} - {game.id}\n        </Link>\n      </ListGroup.Item>\n    )\n    // currently getting a minor/tiny error about the way this link path works\n    // tiny-warning.esm.js:11 Warning: You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path \"/games/14/\" to begin with \"/react_advanced_war_client\". then redirects to home and signs user out. / refresh ?\n    // put a link around each ListGroup item?\n\n    // each entry is a link to the game detail page, add the component and url, this new component is where the game should be in the state with it's pieces etc. but also not be started- lobby view\n\n    const gameList = openGames.map(drawGameListEntry)\n\n    return (\n      <><span>coming in V2.0, see your games, and in V3, join another game !</span>\n        <ListGroup>\n          {gameList}\n        </ListGroup>\n      </>\n    )\n  }\n}\n\nexport default withRouter(IndexGames)\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\n// writing html and jsx to organize my Create And Index components on the page\nimport CreateGame from './CreateGame'\nimport IndexGames from './IndexGames'\n\n// App - GameHall - /indexgames/ & creategame\n//  || parallel\n// App - /GameLobby/ - ingameview\n\n// pass the PROPS!\nconst GameHall = (props) => {\n  return (\n    <Container>\n      <Row>\n        <span>Welcome to the Advance War Game Hall</span>\n      </Row>\n      <Row>\n        <Col>{CreateGame(props)}</Col>\n        <Col>{IndexGames(props)}</Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default withRouter(GameHall)\n\n// const Header = ({ user }) => ( // USES IMPLICIT RETURN!?\n// <Navbar bg='primary' variant='dark' expand='md'>\n//   <Navbar.Brand>\n//     <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>\n//       Advance War{' '}\n//     </Link>\n//   </Navbar.Brand>\n//   <Navbar.Toggle aria-controls='basic-navbar-nav' />\n//   <Navbar.Collapse id='basic-navbar-nav'>\n//     <Nav className='ml-auto'>\n//       {user && (\n//         <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n//       )}\n//       {alwaysOptions}\n//       {user ? authenticatedOptions : unauthenticatedOptions}\n//     </Nav>\n//   </Navbar.Collapse>\n// </Navbar>\n// )\n","\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport React, { Component } from 'react'\nimport { v4 as uuid } from 'uuid'\n\n// import PieceInstance from './PieceInstance'\n\nclass GameBoard extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = { cellArray: [] }\n  }\n\n  // creates an array of arrays, filled with objects with KVP corresponding to their coordinates.\n  // exp: size 3 returns =\n  // [[{0,0},{1,0},{2,0}],\n  // [{0,1},{1,1},{2,1}],\n  // [{0,2},{1,2},{2,2}]]\n\n  createBoard = (size) => {\n    const cellArray = []\n    for (let y = 0; y < size; y++) {\n      cellArray.push([])\n      for (let x = 0; x < size; x++) {\n        cellArray[y].push({ x: x, y: y })\n      }\n    }\n    return cellArray\n  }\n\n  componentDidMount () { // return here may not be necessary\n    return (this.setState({ cellArray: this.createBoard(7) }))\n  }\n\n  // returns html / jsx row and col with x and y coordinates\n  drawCells = (cellArray) => {\n    // console.log('cellArray:', cellArray)\n    // console.log('this.state:', this.state)\n    console.log('this.props:', this.props)\n    // const boardJSX = []\n    const gamePieces = this.props.gamePieces\n    console.log(gamePieces)\n    const board = cellArray.map((rowArray) => {\n      // console.log('ROW ARRAY NOTE:', rowArray)\n\n      const row = rowArray.map((cell) => (\n        <Col key={uuid()} className='border border-dark'>\n          {' '}\n          {cell.x}, {cell.y}{' '}\n        </Col>\n      )\n      )\n      // console.log('BOARDJSX:', boardJSX)\n\n      // console.log('row:', row)\n      return (<Row key={uuid()}> {row} </Row>)\n    })\n    // console.log('BOARD?', board)\n    return (\n      <Container>\n\n        <Row><Col>{this.props.game.name}</Col><Col>TURN:{this.props.turn}</Col></Row>\n        <Row>{board}</Row>\n      </Container>\n    )\n  }\n\n  // key={board.row.indexOf(cell)}{ board.indexOf(row)} potential key for the cells\n  render () {\n    // console.log('state in game board.js render:', this.state)\n    if (this.state.cellArray.length === 0) {\n      return <div>loading</div>\n    } else {\n      return this.drawCells(this.state.cellArray)\n    }\n  }\n}\n\nexport default withRouter(GameBoard)\n\n// className=\" border border-dark\"\n// const GameHall = (props) => {\n//   return (\n//     <Container>\n//       <Row>\n//         <span>Welcome to the Advance War Game Hall</span>\n//       </Row>\n//       <Row>\n//         <Col>{CreateGame(props)}</Col>\n//         <Col>{IndexGames(props)}</Col>\n//       </Row>\n//     </Container>\n//   )\n// }\n\n// class BoardCell extends Component {\n//   constructor (props) {\n//     super(props)\n\n//     this.state = {}\n//   }\n\n//   return {\n//     <Col> {props.x}, {props.y} </Col>\n//   }\n// }\n","import React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\n// import { Container, Row, Col } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport { getGame, deleteGame, updateGame } from '../../api/games'\nimport { updatePiece, indexPieces, createPiece } from '../../api/pieces'\n\nimport { DeleteGameSuccess } from '../AutoDismissAlert/messages'\nimport GameBoard from './GameBoard'\n// app - gameHall - index && create\n// ||\n// app - lobby - board - cells && pieces **? make them siblings or have cells be the parent of pieces ?\n\n// define a game-board class ( needs state data, pieces, turn, owner.)\nclass GameInstance extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      game: {},\n      gamePieces: []\n    }\n  }\n\n    initialSet = (bigGameObj) => {\n      console.log(bigGameObj)\n      const { setPieces, setGame, setTurn } = this.props\n      const newGame = bigGameObj.game\n      const newGamePieces = bigGameObj.game.game_pieces\n      setPieces(newGamePieces)\n      setGame(newGame)\n      setTurn(newGame.turn)\n      console.log('IN INITIAL SET:GAME =', newGame)\n      console.log('IN INITIAL SET:GAMEPIECES =', newGamePieces)\n    }\n\n    CreatNewPiece (piece) {\n      const { user, game, gamePieces, setPieces } = this.props\n      const piecesArray = gamePieces\n      createPiece(user, piece, game.id)\n        .then((res) => {\n          console.log('IN CREATE NEW PIECE, the response from api is:', res)\n          return (res.data)\n        })\n        .then((data) => {\n          piecesArray.push(data.piece)\n          setPieces(piecesArray)\n        })\n    }\n\n    updatePiece (piece) {\n      const { user } = this.props\n      const gameId = this.state.game.id\n      // updatePiece expects : user, gameId, pieceId, pieceData, returns 204, no body\n      updatePiece(user, gameId, piece.id, piece) // api call\n      // index Pieces expects : (user, gameId)\n      // returns {game_pieces:[ array of pieces as {KVPs},{KVPs}] }\n        .then(() => indexPieces(user, gameId))\n        .then((res) => {\n          console.log(res)\n          this.props.setPieces(res)\n        })\n        .catch((res) => console.log(res))\n    }\n\n    componentDidMount () {\n      // console.log('this.props.match.params.id', this.props.match.params.id)\n      // console.log('state:', this.state)\n      // console.log('props:', this.props)\n      const { user } = this.props\n      // getGame expects a user, and the id, returns an object 'game': { with all the good stuff }\n      getGame(user, this.props.match.params.id)\n        .then((res) => {\n          console.log('after getGame call:', res)\n          return res\n        })\n        .then((res) => {\n          this.initialSet(res.data)\n          return (res)\n        })\n        .then((res) => console.log(res.data))\n        .catch((res) => console.log(res))\n    }\n\n    DeleteGame () {\n    // const { user, msgAlert, history } = this.props\n      // console.log('IN DELETE GAME THE PROPS ARE:', this.props)\n      const gameId = this.props.game.id\n      deleteGame(this.props.user, gameId) // user, gameId\n        .then((res) => console.log(res))\n        .finally(() =>\n          this.props.msgAlert({\n            heading: 'Game Deleted',\n            message: DeleteGameSuccess,\n            variant: 'success'\n          })\n        )\n        .finally(() => this.props.clearGame())\n        .finally(() => this.props.setTurn(null))\n        .finally(() => this.props.clearPieces)\n        .finally(() => this.props.history.push('/games/'))\n    }\n\n    // patch the game, it IS a PARTIAL update, can accept a new name(str), is_over(bool), is_started(bool), and turn(int).\n    // WILL NOT AFFECT PIECES\n    // updateGame = (user, id, gameData)\n    // sends empty response\n    EndTurn () {\n      const gameId = this.props.game.id\n      const updatedGameData = this.props.game\n      updatedGameData.turn += 1\n      updateGame(this.props.user, gameId, updatedGameData)\n        .then(() => {\n          this.props.setGame(updatedGameData)\n          this.props.setTurn(updatedGameData.turn)\n        })\n        .catch((res) => console.log('something went wrong', res))\n      // this.props.setTurn(this.props.turn + 1)\n    }\n    //       piece: {\n    //     name: pieceData.name,\n    //     position_x: pieceData.position_x,\n    //     position_y: pieceData.position_y\n\n    // to update pieces you must do a **piece patch**, they do NOT live on the game model. any patches to the game will not affect them\n    render () {\n      console.log('in game instance render props & props.game:', this.props, this.props.game)\n      const demoPiece = { name: 'marine', position_x: 2, position_y: 2 }\n      // console.log('IN GAME INSTANCE, AT RENDER. THE game STATE IS:', this.props.game)\n      if (!this.props.game) { return (<div> loading</div>) }\n      return (\n\n        <>\n          < GameBoard {...this.props} />\n          <Button onClick={() => { this.DeleteGame(this.props) }}> Delete Game </Button>\n          <Button onClick={() => { this.EndTurn(this.props) }}> EndTurn </Button>\n          <Button onClick={() => { this.CreatNewPiece(demoPiece) }}> NewPiece </Button>\n        </>\n      )\n    }\n}\n\nexport default withRouter(GameInstance)\n\n// define a board cell class ( needs position x , y )\n\n// define a piece class ( needs position, x and y)\n","// need to write CRUD pieces calls\nimport apiUrl from '../apiConfig'\nimport axios from 'axios'\n\n// piece routes\n// create a piece (expects name, and it's positions)\nexport const createPiece = (user, pieceData, gameId) => {\n  // user is coming from the state of the app component\n  return axios({\n    method: 'POST',\n    url: apiUrl + `/games/${gameId}/pieces/`,\n    headers: {\n      Authorization: `Token ${user.token}`\n    },\n    data: {\n      piece: {\n        name: pieceData.name,\n        position_x: pieceData.position_x,\n        position_y: pieceData.position_y\n      }\n    }\n  })\n}\n\n// get all users pieces ( will need another to get ALL open pieces(not started?), V2+)\nexport const indexPieces = (user, gameId) => {\n  return axios({\n    url: apiUrl + `/games/${gameId}/pieces/`,\n    method: 'GET',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n// get one piece / detail view\nexport const getPiece = (user, gameId, pieceId) => {\n  return axios({\n    url: apiUrl + `/games/${gameId}/pieces/${pieceId}/`,\n    method: 'GET',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n// patch the piece, it IS a PARTIAL update. For now will only update the position\nexport const updatePiece = (user, gameId, pieceId, pieceData) => {\n  return axios({\n    url: apiUrl + `/games/${gameId}/pieces/${pieceId}/`,\n    method: 'PATCH',\n    headers: {\n      Authorization: `Token ${user.token}`\n    },\n    data: {\n      piece: {\n        position_x: pieceData.position_x,\n        position_y: pieceData.position_y\n      }\n    }\n  })\n}\n\n// delete piece\nexport const deletePiece = (user, gameId, pieceId) => {\n  return axios({\n    url: apiUrl + `/games/${gameId}/pieces/${pieceId}/`,\n    method: 'DELETE',\n    headers: {\n      Authorization: `Token ${user.token}`\n    }\n  })\n}\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport GameHall from './components/game/GameHall'\n// import GameLobby from './components/game/GameLobby'\nimport GameInstance from './components/game/GameInstance'\n// import CreateGame from './components/game/CreateGame'\n// import IndexGames from './components/game/IndexGames.js'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: [],\n      game: null,\n      gamePieces: [],\n      turn: 0 // add to back end model\n    }\n  }\n\n  // setGame = (game) => this.setState({ game })\n\n  // expects game to be = {gameDetails}, may need to be game.game if it is= {game:{gameDetails}}\n  setTurn = (turn) => this.setState({ turn })\n\n  setGame = (game) => this.setState({ game })\n\n  clearGame = () => this.setState({ game: null })\n\n  setPieces = (pieces) => this.setState({ gamePieces: pieces })\n\n  clearPieces = () => this.setState({ gamePieces: [] })\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  // Alerts from template\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n        <Header user={user} />\n        {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n        <main className='container'>\n          <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/games/'\n            render={() => (\n              <>\n                <GameHall msgAlert={this.msgAlert} user={user} setGameId={this.setGameId}/>\n                {/* Create and index are now children of the gamehall, redirect to game lobby below */}\n              </>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/games/:id'\n            render={() => (\n              <>\n                <GameInstance msgAlert={this.msgAlert} user={user} setPieces={this.setPieces} clearPieces={this.clearPieces} setGame={this.setGame} clearGame={this.clearGame} game={this.state.game} gamePieces={this.state.gamePieces} turn={this.state.turn} setTurn={this.setTurn}/>\n              </>\n            )}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}